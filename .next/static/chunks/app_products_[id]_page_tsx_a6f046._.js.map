{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/mohammed/Documents/Web/e-commerce/app/products/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\"\n\nimport Image from \"next/image\"\nimport { Star, Truck, ArrowLeft } from \"lucide-react\"\nimport Link from \"next/link\"\nimport { useCart } from \"@/app/contexts/CartContext\"\nimport { useState } from \"react\"\n\nexport default function ProductPage({ params }: { params: { id: string } }) {\n  const { addToCart } = useCart()\n  const [quantity, setQuantity] = useState(1)\n\n  // In a real application, you would fetch the product data based on the ID\n  const product = {\n    id: Number.parseInt(params.id),\n    name: \"Comfortable Armchair\",\n    price: 299.99,\n    description: \"A stylish and comfortable armchair perfect for any living room or reading nook.\",\n    rating: 4.5,\n    reviews: 128,\n    inStock: true,\n    image: \"/placeholder.svg?height=600&width=600\",\n  }\n\n  const handleAddToCart = () => {\n    addToCart({\n      id: product.id,\n      name: product.name,\n      price: product.price,\n      quantity: quantity,\n      image: product.image,\n    })\n    alert(\"Product added to cart!\")\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <Link href=\"/categories/living-room\" className=\"flex items-center text-blue-500 hover:underline mb-4\">\n        <ArrowLeft size={20} className=\"mr-2\" />\n        Back to Living Room\n      </Link>\n\n      <div className=\"grid md:grid-cols-2 gap-8\">\n        <div>\n          <Image\n            src={product.image || \"/placeholder.svg\"}\n            alt={product.name}\n            width={600}\n            height={600}\n            className=\"w-full rounded-lg shadow-md\"\n          />\n        </div>\n\n        <div>\n          <h1 className=\"text-3xl font-bold mb-4\">{product.name}</h1>\n          <div className=\"flex items-center mb-4\">\n            <div className=\"flex text-yellow-400 mr-2\">\n              {[1, 2, 3, 4, 5].map((star) => (\n                <Star key={star} size={20} fill={star <= Math.floor(product.rating) ? \"currentColor\" : \"none\"} />\n              ))}\n            </div>\n            <span className=\"text-gray-600\">({product.reviews} reviews)</span>\n          </div>\n          <p className=\"text-2xl font-bold mb-4\">${product.price.toFixed(2)}</p>\n          <p className=\"text-gray-600 mb-6\">{product.description}</p>\n\n          <div className=\"mb-6\">\n            <h3 className=\"font-semibold mb-2\">Quantity:</h3>\n            <div className=\"flex items-center space-x-2\">\n              <button\n                className=\"bg-gray-200 px-3 py-1 rounded-md\"\n                onClick={() => setQuantity((prev) => Math.max(1, prev - 1))}\n              >\n                -\n              </button>\n              <span className=\"text-xl font-semibold\">{quantity}</span>\n              <button className=\"bg-gray-200 px-3 py-1 rounded-md\" onClick={() => setQuantity((prev) => prev + 1)}>\n                +\n              </button>\n            </div>\n          </div>\n\n          <button\n            className=\"w-full bg-blue-500 text-white py-3 rounded-md font-semibold hover:bg-blue-600 transition duration-300 mb-4\"\n            onClick={handleAddToCart}\n          >\n            Add to Cart\n          </button>\n\n          <div className=\"flex items-center text-green-600 mb-6\">\n            <Truck size={20} className=\"mr-2\" />\n            <span>{product.inStock ? \"In stock and ready to ship\" : \"Out of stock\"}</span>\n          </div>\n\n          <div className=\"border-t pt-6\">\n            <h3 className=\"font-semibold mb-2\">Product Details:</h3>\n            <ul className=\"list-disc list-inside text-gray-600\">\n              <li>Comfortable padded seat and backrest</li>\n              <li>Sturdy wooden frame</li>\n              <li>Easy to clean fabric upholstery</li>\n              <li>Dimensions: 30\" W x 32\" D x 34\" H</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;;;AAHA;;;;;;AAQe,SAAS,YAAY,EAAE,MAAM,EAA8B;;IACxE,MAAM,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,UAAO,AAAD;IAC5B,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,0EAA0E;IAC1E,MAAM,UAAU;QACd,IAAI,OAAO,QAAQ,CAAC,OAAO,EAAE;QAC7B,MAAM;QACN,OAAO;QACP,aAAa;QACb,QAAQ;QACR,SAAS;QACT,SAAS;QACT,OAAO;IACT;IAEA,MAAM,kBAAkB;QACtB,UAAU;YACR,IAAI,QAAQ,EAAE;YACd,MAAM,QAAQ,IAAI;YAClB,OAAO,QAAQ,KAAK;YACpB,UAAU;YACV,OAAO,QAAQ,KAAK;QACtB;QACA,MAAM;IACR;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,+JAAA,CAAA,UAAI;gBAAC,MAAK;gBAA0B,WAAU;;kCAC7C,6LAAC,mNAAA,CAAA,YAAS;wBAAC,MAAM;wBAAI,WAAU;;;;;;oBAAS;;;;;;;0BAI1C,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;kCACC,cAAA,6LAAC,gIAAA,CAAA,UAAK;4BACJ,KAAK,QAAQ,KAAK,IAAI;4BACtB,KAAK,QAAQ,IAAI;4BACjB,OAAO;4BACP,QAAQ;4BACR,WAAU;;;;;;;;;;;kCAId,6LAAC;;0CACC,6LAAC;gCAAG,WAAU;0CAA2B,QAAQ,IAAI;;;;;;0CACrD,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;kDACZ;4CAAC;4CAAG;4CAAG;4CAAG;4CAAG;yCAAE,CAAC,GAAG,CAAC,CAAC,qBACpB,6LAAC,qMAAA,CAAA,OAAI;gDAAY,MAAM;gDAAI,MAAM,QAAQ,KAAK,KAAK,CAAC,QAAQ,MAAM,IAAI,iBAAiB;+CAA5E;;;;;;;;;;kDAGf,6LAAC;wCAAK,WAAU;;4CAAgB;4CAAE,QAAQ,OAAO;4CAAC;;;;;;;;;;;;;0CAEpD,6LAAC;gCAAE,WAAU;;oCAA0B;oCAAE,QAAQ,KAAK,CAAC,OAAO,CAAC;;;;;;;0CAC/D,6LAAC;gCAAE,WAAU;0CAAsB,QAAQ,WAAW;;;;;;0CAEtD,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAG,WAAU;kDAAqB;;;;;;kDACnC,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDACC,WAAU;gDACV,SAAS,IAAM,YAAY,CAAC,OAAS,KAAK,GAAG,CAAC,GAAG,OAAO;0DACzD;;;;;;0DAGD,6LAAC;gDAAK,WAAU;0DAAyB;;;;;;0DACzC,6LAAC;gDAAO,WAAU;gDAAmC,SAAS,IAAM,YAAY,CAAC,OAAS,OAAO;0DAAI;;;;;;;;;;;;;;;;;;0CAMzG,6LAAC;gCACC,WAAU;gCACV,SAAS;0CACV;;;;;;0CAID,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,uMAAA,CAAA,QAAK;wCAAC,MAAM;wCAAI,WAAU;;;;;;kDAC3B,6LAAC;kDAAM,QAAQ,OAAO,GAAG,+BAA+B;;;;;;;;;;;;0CAG1D,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAG,WAAU;kDAAqB;;;;;;kDACnC,6LAAC;wCAAG,WAAU;;0DACZ,6LAAC;0DAAG;;;;;;0DACJ,6LAAC;0DAAG;;;;;;0DACJ,6LAAC;0DAAG;;;;;;0DACJ,6LAAC;0DAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOlB;GAnGwB;;QACA,kIAAA,CAAA,UAAO;;;KADP"}},
    {"offset": {"line": 333, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}